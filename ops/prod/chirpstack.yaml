# SPDX-License-Identifier: Apache-2.0
# Copyright (c) CHOOVIO Inc.
apiVersion: v1
kind: Secret
metadata: { name: chirpstack-secrets, namespace: magistrala }
type: Opaque
stringData:
  redis-url: "redis://your-elasticache:6379"
  jwt-secret: "ROTATE_ME"
---
apiVersion: apps/v1
kind: Deployment
metadata: { name: chirpstack, namespace: magistrala, labels: { app: chirpstack } }
spec:
  replicas: 2
  selector: { matchLabels: { app: chirpstack } }
  template:
    metadata: { labels: { app: chirpstack } }
    spec:
      containers:
        - name: chirpstack
          image: 123456789012.dkr.ecr.us-east-1.amazonaws.com/chirpstack@sha256:deadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
          env:
            - { name: CHIRPSTACK__HEALTHCHECK__ENABLED, value: "true" }
            - { name: CHIRPSTACK__API__EXTERNAL__BIND, value: "0.0.0.0:8080" }
            - { name: CHIRPSTACK__API__EXTERNAL__JWT__SECRET, valueFrom: { secretKeyRef: { name: chirpstack-secrets, key: jwt-secret } } }
            - { name: CHIRPSTACK__POSTGRESQL__DSN, value: "postgres://chirpstack:change-me@your-rds:5432/chirpstack?sslmode=disable" }
            - { name: CHIRPSTACK__REDIS__SERVERS__0, valueFrom: { secretKeyRef: { name: chirpstack-secrets, key: redis-url } } }
          ports: [{ name: http, containerPort: 8080 }]
          readinessProbe: { httpGet: { path: /health, port: http }, initialDelaySeconds: 5, periodSeconds: 10 }
          livenessProbe:  { httpGet: { path: /health, port: http }, initialDelaySeconds: 10, periodSeconds: 10 }
---
apiVersion: v1
kind: Service
metadata: { name: chirpstack, namespace: magistrala }
spec:
  selector: { app: chirpstack }
  ports:
    - { name: http, port: 8080, targetPort: http }
  type: ClusterIP
