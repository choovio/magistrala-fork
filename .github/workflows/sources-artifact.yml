# SPDX-FileCopyrightText: 2025 CHOOVIO Inc.
# SPDX-License-Identifier: MIT
---
name: Sources JSON Artifact

on:
  pull_request:
  push:
    branches: [ main ]
    paths:
      - ".github/workflows/sources-artifact.yml"
      - "ops/sources/**"

permissions:
  contents: read

jobs:
  sources-json:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Ensure ops/sources/sources.json exists (generate if missing)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p ops/sources
          if [ ! -f ops/sources/sources.json ]; then
            printf '%s\n' '{' \
              '  "version": 1,' \
              '  "sources": [' \
              '    { "name": "bootstrap", "path": "cmd/bootstrap" },' \
              '    { "name": "users",     "path": "cmd/users" },' \
              '    { "name": "things",    "path": "cmd/things" },' \
              '    { "name": "certs",     "path": "cmd/certs" },' \
              '    { "name": "domains",   "path": "cmd/domains" },' \
              '    { "name": "provision", "path": "cmd/provision" },' \
              '    { "name": "reports",   "path": "cmd/reports" },' \
              '    { "name": "re",        "path": "cmd/re" }' \
              '  ]' \
              '}' > ops/sources/sources.json
            echo "Generated ops/sources/sources.json"
          else
            echo "Found existing ops/sources/sources.json"
          fi
          echo "---- sources.json ----"
          sed -n '1,200p' ops/sources/sources.json

      - name: Validate schema
        shell: bash
        run: |
          python3 - <<'PY'
          import json, sys
          p='ops/sources/sources.json'
          try: data=json.load(open(p))
          except Exception as e: print(f"Invalid JSON: {e}"); sys.exit(1)
          assert isinstance(data.get('version'), int)
          src=data.get('sources'); assert isinstance(src, list) and src
          for s in src: assert isinstance(s, dict) and 'name' in s and 'path' in s
          print("sources.json OK.")
          PY

      - name: Upload sources.json
        uses: actions/upload-artifact@v4
        with:
          name: sources.json
          path: ops/sources/sources.json