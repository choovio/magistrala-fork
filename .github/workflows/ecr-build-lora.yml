# SPDX-License-Identifier: Apache-2.0
# Copyright (c) CHOOVIO Inc.

name: ECR Build / LoRa

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: "Image tag to build (e.g. sbx or commit SHA)"
        required: false
        default: sbx
  push:
    branches: [ "main" ]
    paths:
      - "adapters/lora/**"
      - ".github/workflows/ecr-build-lora.yml"

permissions:
  contents: read
  id-token: write

env:
  AWS_REGION: us-west-2
  ECR_REGISTRY: 595443389404.dkr.ecr.us-west-2.amazonaws.com
  ECR_REPO: lora

jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_GHA_ECR_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set TAG and IMAGE_NAME
        id: meta
        run: |
          echo "TAG=${{ github.event.inputs.image_tag || github.sha }}" >> $GITHUB_OUTPUT
          echo "IMAGE_NAME=${ECR_REGISTRY}/${ECR_REPO}" >> $GITHUB_ENV

      - name: Build image
        run: |
          docker build -f adapters/lora/Dockerfile -t "$IMAGE_NAME:${{ steps.meta.outputs.TAG }}" adapters/lora

      - name: Push image
        run: |
          docker push "$IMAGE_NAME:${{ steps.meta.outputs.TAG }}"

      - name: Resolve digest and write artifact
        run: |
          DIGEST=$(aws ecr describe-images \
            --repository-name "${ECR_REPO}" \
            --image-ids imageTag="${{ steps.meta.outputs.TAG }}" \
            --query 'imageDetails[0].imageDigest' --output text)
          echo "FULL=${IMAGE_NAME}@${DIGEST}" > lora-digest.txt
          cat lora-digest.txt

      - name: Upload digest artifact
        uses: actions/upload-artifact@v4
        with:
          name: lora-digest
          path: lora-digest.txt
          if-no-files-found: error
