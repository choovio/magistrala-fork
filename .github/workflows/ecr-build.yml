# SPDX-License-Identifier: MIT
# Copyright (c) 2025 CHOOVIO Inc.
#
# Repo: choovio/magistrala-fork
# Purpose: Build & push Magistrala service images to ECR using OIDC (no repo creation).
# Requires repo secrets: AWS_ROLE_ARN, AWS_ACCOUNT_ID, AWS_DEFAULT_REGION

name: Build & Push Magistrala Services to ECR

on:
  push:
    branches: [ main ]
    paths:
      - "cmd/**"
      - "Dockerfile"
      - ".github/workflows/ecr-build.yml"
  workflow_dispatch: {}

permissions:
  id-token: write     # REQUIRED for OIDC
  contents: read

env:
  AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION || 'us-west-2' }}
  AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service:
          - users
          - things
          - certs
          - domains
          - bootstrap
          - provision
          - postgres-reader
          - postgres-writer
          - reports
          - re

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: gobee-ci-${{ github.run_id }}

      - name: Derive tags
        id: tags
        shell: bash
        run: |
          echo "sha=$(git rev-parse --short=12 HEAD)" >> "$GITHUB_OUTPUT"
          echo "date=$(date +%Y%m%d%H%M%S)" >> "$GITHUB_OUTPUT"
          echo "branch=${GITHUB_REF_NAME//\//-}" >> "$GITHUB_OUTPUT"

      - name: ECR login
        shell: bash
        run: |
          aws ecr get-login-password --region "${{ env.AWS_REGION }}" \
          | docker login --username AWS --password-stdin "${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com"

      - name: Build image
        shell: bash
        env:
          SVC: ${{ matrix.service }}
        run: |
          DOCKERFILE="Dockerfile"
          PKG="./cmd/${SVC}"
          test -d "${PKG}" || { echo "ERROR: missing ${PKG}"; ls -la cmd || true; exit 1; }
          docker build --file "${DOCKERFILE}" --build-arg BUILD_PACKAGE="${PKG}" --tag "tmp/${SVC}:build" .

      - name: Tag & push
        shell: bash
        env:
          SVC: ${{ matrix.service }}
        run: |
          REGION="${{ env.AWS_REGION }}"
          ACCOUNT="${{ env.AWS_ACCOUNT_ID }}"
          IMAGE="${ACCOUNT}.dkr.ecr.${REGION}.amazonaws.com/${SVC}"
          docker tag "tmp/${SVC}:build" "${IMAGE}:${{ steps.tags.outputs.sha }}"
          docker tag "tmp/${SVC}:build" "${IMAGE}:${{ steps.tags.outputs.date }}"
          docker tag "tmp/${SVC}:build" "${IMAGE}:${{ steps.tags.outputs.branch }}-latest"
          docker push "${IMAGE}:${{ steps.tags.outputs.sha }}"
          docker push "${IMAGE}:${{ steps.tags.outputs.date }}"
          docker push "${IMAGE}:${{ steps.tags.outputs.branch }}-latest"
