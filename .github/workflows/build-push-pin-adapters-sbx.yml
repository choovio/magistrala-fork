# Copyright (c) CHOOVIO Inc.
# SPDX-License-Identifier: Apache-2.0
name: SBX · Build & Push Adapters (http, ws) → ECR

on:
  workflow_dispatch:
    inputs:
      ecrRegistry:
        description: "AWS ECR registry (e.g., 595443389404.dkr.ecr.us-west-2.amazonaws.com). If omitted, derived from AWS_ACCOUNT_ID/AWS_DEFAULT_REGION secrets."
        required: false
      awsRegion:
        description: "AWS region (e.g., us-west-2). If omitted, taken from AWS_DEFAULT_REGION secret."
        required: false
      sbxTag:
        description: "Optional tag/label (e.g., commit SHA or date)."
        required: false
        default: ""

permissions:
  id-token: write
  contents: read
  packages: write

env:
  HTTP_ECR_REPO: http
  WS_ECR_REPO: ws

jobs:
  build-push:
    name: Build & Push (${{ matrix.adapter }})
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        include:
          - adapter: http
            dockerfile: docker/http-adapter/Dockerfile
            context: docker/http-adapter
            ecr_repo_env: HTTP_ECR_REPO
          - adapter: ws
            dockerfile: docker/ws-adapter/Dockerfile
            context: docker/ws-adapter
            ecr_repo_env: WS_ECR_REPO

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Resolve Inputs/Env
        id: cfg
        run: |
          set -euo pipefail
          REGION="${{ github.event.inputs.awsRegion }}"
          if [ -z "$REGION" ]; then REGION="${{ secrets.AWS_DEFAULT_REGION }}"; fi
          if [ -z "$REGION" ]; then echo "awsRegion not provided and AWS_DEFAULT_REGION secret missing." >&2; exit 1; fi
          echo "region=$REGION" >> $GITHUB_OUTPUT

          REGISTRY="${{ github.event.inputs.ecrRegistry }}"
          if [ -z "$REGISTRY" ]; then
            if [ -z "${{ secrets.AWS_ACCOUNT_ID }}" ]; then
              echo "ecrRegistry not provided and AWS_ACCOUNT_ID secret missing." >&2; exit 1
            fi
            REGISTRY="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$REGION.amazonaws.com"
          fi
          echo "registry=$REGISTRY" >> $GITHUB_OUTPUT

          TAG="${{ github.event.inputs.sbxTag }}"
          if [ -z "$TAG" ]; then TAG="${{ github.sha }}"; fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT

          echo "Resolved config → REGISTRY=$REGISTRY REGION=$REGION TAG=$TAG"

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ steps.cfg.outputs.region }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Ensure ECR repo exists
        id: ensure
        run: |
          set -euo pipefail
          REPO_NAME="${{ env[ matrix.ecr_repo_env ] }}"
          aws ecr describe-repositories --repository-names "$REPO_NAME" >/dev/null 2>&1 || \
            aws ecr create-repository --repository-name "$REPO_NAME" >/dev/null
          echo "repo=$REPO_NAME" >> $GITHUB_OUTPUT

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push (${{ matrix.adapter }})
        id: buildpush
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          provenance: false
          sbom: false
          platforms: linux/amd64
          tags: |
            ${{ steps.cfg.outputs.registry }}/${{ steps.ensure.outputs.repo }}:sbx-${{ steps.cfg.outputs.tag }}
          outputs: type=image,name=${{ steps.cfg.outputs.registry }}/${{ steps.ensure.outputs.repo }},push-by-digest=true,name-canonical=true

      - name: Capture Digest
        id: digest
        run: |
          set -euo pipefail
          META='${{ steps.buildpush.outputs.metadata }}'
          if ! command -v jq >/dev/null 2>&1; then
            sudo apt-get update && sudo apt-get install -y jq
          fi
          DIGEST="$(jq -r '.["containerimage.digest"]' <<< "$META")"
          if [ -z "$DIGEST" ] || [ "$DIGEST" = "null" ]; then echo "No digest from build-push metadata" >&2; exit 1; fi
          REF="${{ steps.cfg.outputs.registry }}/${{ steps.ensure.outputs.repo }}@${DIGEST}"
          echo "ref=$REF" >> $GITHUB_OUTPUT
          mkdir -p artifacts
          echo "{\"adapter\":\"${{ matrix.adapter }}\",\"ref\":\"$REF\"}" > "artifacts/${{ matrix.adapter }}.json"
          echo "Digest → $REF"

      - name: Upload per-adapter digest
        uses: actions/upload-artifact@v4
        with:
          name: sbx-adapter-digests
          path: artifacts/*.json
          if-no-files-found: error

  summarize:
    name: Summarize digests
    runs-on: ubuntu-latest
    needs: [build-push]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: sbx-adapter-digests
          path: digests
      - name: Print summary
        run: |
          if ! command -v jq >/dev/null 2>&1; then
            sudo apt-get update && sudo apt-get install -y jq
          fi
          echo "== SBX Adapter ECR digests =="
          jq -s '.' digests/*.json | tee combined-digests.json
      - name: Upload combined digests
        uses: actions/upload-artifact@v4
        with:
          name: sbx-adapter-digests-combined
          path: combined-digests.json
