name: CI Pipeline

on:
  pull_request:
  push:
    branches: [ main ]

permissions:
  contents: read
  packages: read
  id-token: write

jobs:
  discover-build-contexts:
    name: Discover Docker build contexts
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.ctx.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Print context
        run: |
          echo "SHA=$GITHUB_SHA"
          echo "EVENT=${{ github.event_name }}"
          git describe --always --dirty --tags || true

      - name: Discover adapter contexts (bash)
        id: ctx
        shell: bash
        run: |
          set -euo pipefail
          includes='[]'
          if [[ -f docker/http-adapter/Dockerfile ]]; then
            includes=$(echo "$includes" | jq '. + [{"name":"http-adapter","context":".","dockerfile":"docker/http-adapter/Dockerfile"}]')
          fi
          if [[ -f docker/ws-adapter/Dockerfile ]]; then
            includes=$(echo "$includes" | jq '. + [{"name":"ws-adapter","context":".","dockerfile":"docker/ws-adapter/Dockerfile"}]')
          fi
          matrix=$(jq -n --argjson inc "${includes}" '{ include: $inc }')
          printf 'matrix=%s\n' "$(echo "$matrix" | jq -c .)" >> "$GITHUB_OUTPUT"

  build-adapters:
    name: Build adapters
    runs-on: ubuntu-latest
    needs: discover-build-contexts
    if: ${{ fromJSON(needs.discover-build-contexts.outputs.matrix).include | length > 0 }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.discover-build-contexts.outputs.matrix) }}
    env:
      AWS_REGION: ${{ vars.AWS_REGION || 'us-west-2' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: SuperMQ guard (patches-only)
        shell: bash
        run: |
          set -e
          if [[ -n "$(git status --porcelain docker/supermq-docker | grep -v 'patches/')" ]]; then
            echo "Direct edits under docker/supermq-docker detected. Use patches/ only."
            git diff docker/supermq-docker || true
            exit 1
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials (OIDC or secrets)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}
        if: ${{ !!secrets.AWS_ROLE_TO_ASSUME }}

      - name: Fallback AWS creds (access keys)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}
        if: ${{ !secrets.AWS_ROLE_TO_ASSUME && secrets.AWS_ACCESS_KEY_ID && secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Amazon ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registries: ${{ secrets.AWS_ACCOUNT_ID }}
        env:
          AWS_REGION: ${{ env.AWS_REGION }}

      - name: Ensure ECR repos exist
        shell: bash
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ env.AWS_REGION }}
        run: |
          set -euo pipefail
          repo_base="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/choovio/magistrala"
          for name in "http-adapter" "ws-adapter"; do
            aws ecr describe-repositories --repository-names "choovio/magistrala/${name}" >/dev/null 2>&1 || \
              aws ecr create-repository --repository-name "choovio/magistrala/${name}" >/dev/null
          done
          echo "repo_base=${repo_base}" >> "$GITHUB_ENV"

      - name: Build & (conditionally) push
        uses: docker/build-push-action@v6
        with:
          context:  ${{ matrix.context }}
          file:     ${{ matrix.dockerfile }}
          platforms: linux/amd64
          push:     ${{ github.ref == 'refs/heads/main' }}
          tags:     ${{ env.repo_base }}/${{ matrix.name }}:${{ github.sha }},${{ env.repo_base }}/${{ matrix.name }}:latest
          provenance: false
          sbom: false