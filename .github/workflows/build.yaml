# Copyright (c) Abstract Machines
# SPDX-License-Identifier: Apache-2.0

name: Continuous Delivery
on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    name: Build and Push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write   # required to push to GHCR with GITHUB_TOKEN

    env:
      OWNER: ${{ github.repository_owner }}
      IMAGE_PREFIX: ghcr.io/${{ github.repository_owner }}/magistrala
      SERVICES: "bootstrap provision re postgres-writer postgres-reader timescale-writer timescale-reader cli alarms reports"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch tags for the build
        run: git fetch --prune --tags

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.x
          cache-dependency-path: go.sum

      - name: Run tests
        run: make test

      - name: Upload coverage
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV }}
          files: ./coverage/*.out
          verbose: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build with whatever tags the Makefile currently produces (may still tag absmach)
      - name: Build (legacy tags OK)
        run: make latest -j "$(nproc)"

      # Retag any absmach images to choovio and push
      - name: Retag & push to choovio
        run: |
          set -euo pipefail
          for svc in ${SERVICES}; do
            SRC="ghcr.io/absmach/magistrala/${svc}:latest"
            DST="${IMAGE_PREFIX}/${svc}:latest"
            if docker image inspect "${SRC}" >/dev/null 2>&1; then
              docker tag "${SRC}" "${DST}"
            fi
            if docker image inspect "${DST}" >/dev/null 2>&1; then
              docker push "${DST}"
            else
              echo "WARN: no local image for ${svc}; skipping"
            fi
          done

      - name: Trigger Helm Chart Deployment
        if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.REPO_DISPATCH_TOKEN }}
          repository: absmach/amdm
          event-type: deploy-latest-mg-images
