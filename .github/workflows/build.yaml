# Copyright (c) Abstract Machines
# SPDX-License-Identifier: Apache-2.0

name: Continuous Delivery
on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    name: Build and Push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write   # allow GITHUB_TOKEN to publish to GHCR

    env:
      OWNER: ${{ github.repository_owner }}
      IMAGE_PREFIX: ghcr.io/${{ github.repository_owner }}/magistrala
      # Services your Makefile builds/pushes (update if needed):
      SERVICES: "bootstrap provision re postgres-writer postgres-reader timescale-writer timescale-reader cli alarms reports"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch tags for the build
        run: git fetch --prune --tags

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.x
          cache-dependency-path: go.sum

      - name: Run tests
        run: make test

      - name: Upload coverage
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV }}
          files: ./coverage/*.out
          verbose: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Try to steer the Makefile to publish under your org; if it's ignored,
      # the next step retags from absmach â†’ choovio and pushes.
      - name: Build (prefer choovio namespace)
        run: |
          make latest \
            REGISTRY=ghcr.io \
            ORG="${OWNER}" \
            IMAGE_PREFIX="${IMAGE_PREFIX}" \
            -j "$(nproc)"

      # Safety net: if the Makefile still tagged as ghcr.io/absmach/magistrala/*:latest,
      # retag to ghcr.io/${OWNER}/magistrala/*:latest and push.
      - name: Retag and push to choovio (if needed)
        run: |
          set -euo pipefail
          for svc in ${SERVICES}; do
            SRC="ghcr.io/absmach/magistrala/${svc}:latest"
            DST="${IMAGE_PREFIX}/${svc}:latest"
            if docker image inspect "${SRC}" > /dev/null 2>&1; then
              echo "Retagging ${SRC} -> ${DST}"
              docker tag "${SRC}" "${DST}"
              docker push "${DST}"
            else
              # If image already built/tagged as DST, just push it
              if docker image inspect "${DST}" > /dev/null 2>&1; then
                echo "Pushing ${DST}"
                docker push "${DST}"
              else
                echo "WARN: Neither ${SRC} nor ${DST} exists locally; skipping ${svc}"
              fi
            fi
          done

      - name: Trigger Helm Chart Deployment
        if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.REPO_DISPATCH_TOKEN }}
          repository: absmach/amdm
          event-type: deploy-latest-mg-images
