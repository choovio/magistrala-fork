# Copyright (c) Abstract Machines
# SPDX-License-Identifier: Apache-2.0
---
name: Matrix Scout (no-build sanity)

on:
  pull_request:
  push:
    branches: [ main ]
    paths:
      - ".github/workflows/matrix-scout.yml"
      - "ops/matrix/**"

permissions:
  contents: read

jobs:
  validate-matrix:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Ensure ops/matrix/matrix.json exists (generate if missing)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p ops/matrix
          if [ ! -f ops/matrix/matrix.json ]; then
            printf '%s\n' '{' \
              '  "version": 1,' \
              '  "services": [' \
              '    { "service": "bootstrap", "dockerfile": "Dockerfile.bootstrap" },' \
              '    { "service": "users",     "dockerfile": "Dockerfile.users" },' \
              '    { "service": "things",    "dockerfile": "Dockerfile.things" },' \
              '    { "service": "certs",     "dockerfile": "Dockerfile.certs" },' \
              '    { "service": "domains",   "dockerfile": "Dockerfile.domains" },' \
              '    { "service": "provision", "dockerfile": "Dockerfile.provision" },' \
              '    { "service": "reports",   "dockerfile": "Dockerfile.reports" },' \
              '    { "service": "re",        "dockerfile": "Dockerfile.re" }' \
              '  ]' \
              '}' > ops/matrix/matrix.json
            echo "Generated ops/matrix/matrix.json"
          else
            echo "Found existing ops/matrix/matrix.json"
          fi
          echo "---- matrix.json ----"
          sed -n '1,200p' ops/matrix/matrix.json

      - name: Validate schema
        shell: bash
        run: |
          python3 - <<'PY'
          import json, sys
          p='ops/matrix/matrix.json'
          try: data=json.load(open(p))
          except Exception as e: print(f"Invalid JSON: {e}"); sys.exit(1)
          assert isinstance(data.get('version'), int)
          svcs=data.get('services'); assert isinstance(svcs, list) and svcs
          for s in svcs: assert isinstance(s, dict) and 'service' in s and 'dockerfile' in s
          print("matrix.json OK.")
          PY

      - name: Upload matrix.json
        uses: actions/upload-artifact@v4
        with:
          name: matrix.json
          path: ops/matrix/matrix.json
